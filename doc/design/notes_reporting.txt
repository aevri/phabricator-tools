===============================================================================
= Proposal to start monitoring Git notes for Arcyd-managed repositories
===============================================================================

Arcyd should display Git notes in Phabricator reviews, this will make it
easy to bring CI results into Phabricator reviews.

-------------------------------------------------------------------------------
- Why involve Arcyd in CI?
-------------------------------------------------------------------------------

The command-line tool 'arcanist' participates by performing linting and
unit-tests locally on behalf of the user, according to the configuration in
the per-repo '.arcconfig' file.

Arcyd is an attempt to add value on top of Arcanist by removing the need to
install, configure and interact with it locally - simply push Git branches in
order to create and update reviews.

It would seem a natural extension of Arcyd from the user perspective to then
perform the lint and unit steps automatically configured in  the '.arcconfig'
file upon push and share the results in the review.

-------------------------------------------------------------------------------
- Why Git notes?
-------------------------------------------------------------------------------

It's not possible to modify the commit message of a commit without also
altering it's commit hash, effectively making a new commit.

Git notes are a facility added to Git in order to make it possible to
annotate commits post-creation, without altering their commit hash.

By annotating the relevant commits directly in the Git repository, it's
possible for all systems related to a repository to share information about
the commit, without the need for an additional system.

Git Notes are already visible to l

- authorization already built in to git
- consistency model already built into git
- notes easily accessible to humans
- commit metadata is as durable as the commits themselves

-------------------------------------------------------------------------------
- limitations of Git notes
-------------------------------------------------------------------------------

- one note per commit is a lot of notes. For example, a repository with
  ten thousand commits with one kilobyte of uncompressed notes each would
  approach ten megabyte of notes.

- pushing and pulling git repositories can be expected to take on the order
  of a second each time,at least.  Should not be used for high frequency
  communication.

- git notes are expected to be read and written by humans and may be
  displayed alongside commits in a number of places.

- git scales well with content edited by humans, other content does not
  scale well.

- tricky to merge notes on command line

- must explicitly set up to fetch the git notes

-------------------------------------------------------------------------------
- example of ci and git notes
-------------------------------------------------------------------------------

Should be unnecessary to mention kind of test as its encoded in namespace (
check github and git log)

# Passed, # Failed, # Aborted

Limited summary of failures
Link to details

-------------------------------------------------------------------------------
- example walkthrough
-------------------------------------------------------------------------------

- author push working branch
- ci system annotated head commit
- author push working branch as review branch
- arcyd creates review, adds ci notes as comments on review
- author pushes new commit on review branch
- ci system annotated head commit
- arcyd adds ci notes as comments on review
- review accepted
- arcyd lands review

Example with conditional push to review branch

# -----------------------------------------------------------------------------
# Copyright (C) 2014 Bloomberg Finance L.P.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
# ------------------------------ END-OF-FILE ----------------------------------
